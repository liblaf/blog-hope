import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as i,o as n}from"./app-BMihMyie.js";const l={};function r(a,o){return n(),e("div",null,[...o[0]||(o[0]=[i('<h2 id="b-chorus-foundation-models-for-unified-data-discovery-and-exploration" tabindex="-1"><a class="header-anchor" href="#b-chorus-foundation-models-for-unified-data-discovery-and-exploration"><span>(B) CHORUS: Foundation Models for Unified Data Discovery and Exploration</span></a></h2><blockquote><p>[!QUESTION]</p><ol><li>传统数据发现 (Data Discovery) 和探索 (Data Exploration) 存在哪些主要挑战?</li></ol></blockquote><ul><li>分析师需花费大量时间 (约 40%) 在数据加载和清洗上.</li><li>企业内 60-70% 的数据未被利用, 成为 “暗数据”.</li><li>现有工具依赖任务专用模型, 需大量标注数据 (如 10 万至百万级样本).</li><li>异构数据集成困难, 自动化程度不足, 导致数据发现效率低下.</li></ul><blockquote><p>[!QUESTION] 2. 本文提出的 Chorus 系统如何利用基础模型 (Foundation Models) 改进数据发现任务?</p></blockquote><p>CHORUS 通过基础模型 (如 GPT-3.5) 的泛化能力, 统一处理多个数据管理任务:</p><ul><li>将任务转化为自然语言输入输出, 无需任务专用训练.</li><li>支持零样本 (Zero-shot) 和少样本 (Few-shot) 学习, 减少对标注数据的依赖.</li><li>通过上下文信息流 (如前一任务结果影响后续任务) 提升任务间协同效果.</li></ul><blockquote><p>[!QUESTION] 3. Chorus 采用了哪些关键的任务处理流程?</p></blockquote><ul><li><strong>任务顺序执行:</strong> 前一任务的输出作为后续任务的上下文输入.</li><li><strong>模型输入构建:</strong> 包括指令、示例、数据样本、元数据、任务特定知识和输出前缀.</li><li><strong>后处理与错误修正:</strong> 通过约束检查 (如类型合法性) 和 “Anchoring” 技术修复错误.</li><li><strong>统一架构设计:</strong> 允许跨任务信息共享, 提升整体效率.</li></ul><blockquote><p>[!QUESTION] 4. 论文中提出的 “Anchoring” 技术是什么? 如何用于错误修正?</p></blockquote><ul><li><strong>定义:</strong> Anchoring 是一种通过虚构历史输入修正模型幻觉 (Hallucination) 的技术.</li><li><strong>步骤:</strong><ol><li>检测到输出违反约束 (如无效类别) 时终止当前对话.</li><li>启动新对话, 插入虚构的 “正确历史” 输入 (如用最近合法类别替换错误输出).</li><li>模型基于干净输入重新生成结果, 避免错误传播.</li></ol></li></ul><blockquote><p>[!QUESTION] 5. Chorus 如何构建 Prompt 输入, 以适应不同任务的需求?</p></blockquote><p>Prompt 由六部分构成:</p><ul><li><strong>指令:</strong> 任务的自然语言描述 (如 “为表格选择 DBPedia 类别”).</li><li><strong>演示:</strong> 少量示例 (如带标注的表格样本).</li><li><strong>数据样本:</strong> 序列化的表格数据 (如 CSV 片段).</li><li><strong>元数据:</strong> 列名、键等模式信息.</li><li><strong>任务特定知识:</strong> 如允许的输出类别列表.</li><li><strong>前缀:</strong> 引导输出格式 (如 DBPedia URI 前缀或 Pandas 代码片段).</li></ul><blockquote><p>[!QUESTION] 6. Chorus 在表分类检测 (Table-class detection) 任务中的表现如何? 如何与现有方法比较?</p></blockquote><ul><li><strong>监督实验:</strong> 在 T2Dv2 数据集上, CHORUS 的 F1 为 0.926, 显著优于 DoDuo-Wiki (0.757) 和 TaBERT (0.746).</li><li><strong>非监督实验:</strong> 允许预测全部 768 个 DBPedia 类别时, 93% 的结果正确, 其中 10% 优于专家标注.</li><li><strong>效率:</strong> 处理速度达 31 表/秒, 成本为 2.5 美元/100 表.</li></ul><blockquote><p>[!QUESTION] 7. 在连接列预测 (Join-column prediction) 任务中, 与其他方法对比, Chorus 效果如何?</p></blockquote><ul><li><strong>手动评估 (300 样本):</strong> CHORUS 的 F1 为 0.895, 高于 Trifacta Wrangler (0.823)、Levenshtein 距离 (0.718) 和 Jaccard 相似性 (0.575).</li><li><strong>全数据集 (24,579 样本):</strong> F1 达 0.912, 证明其扩展性和稳定性.</li><li><strong>优势:</strong> 通过自然语言建模捕捉语义关联, 超越传统基于名称相似性的方法.</li></ul>',17)])])}const p=t(l,[["render",r]]),u=JSON.parse('{"path":"/PhD/course/2024-2025_Spring_Term/74100162-An_Introduction_to_Modern_Database_System/2025-03-07-02-week03%E9%97%AE%E9%A2%98.html","title":"Week 03 问题","lang":"en-US","frontmatter":{"date":"2025-03-07T02:48:00.000Z","modified":"2025-09-20T15:07:37.000Z","tags":["PhD/Course/An_Introduction_to_Modern_Database_System"],"title":"Week 03 问题","description":"(B) CHORUS: Foundation Models for Unified Data Discovery and Exploration [!QUESTION] 传统数据发现 (Data Discovery) 和探索 (Data Exploration) 存在哪些主要挑战? 分析师需花费大量时间 (约 40%) 在数据加载和清洗上. 企业内 6...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Week 03 问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-07T02:48:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liblaf\\",\\"url\\":\\"https://github.com/liblaf\\"}]}"],["meta",{"property":"og:url","content":"https://hope.liblaf.me/PhD/course/2024-2025_Spring_Term/74100162-An_Introduction_to_Modern_Database_System/2025-03-07-02-week03%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"liblaf"}],["meta",{"property":"og:title","content":"Week 03 问题"}],["meta",{"property":"og:description","content":"(B) CHORUS: Foundation Models for Unified Data Discovery and Exploration [!QUESTION] 传统数据发现 (Data Discovery) 和探索 (Data Exploration) 存在哪些主要挑战? 分析师需花费大量时间 (约 40%) 在数据加载和清洗上. 企业内 6..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"PhD/Course/An_Introduction_to_Modern_Database_System"}],["meta",{"property":"article:published_time","content":"2025-03-07T02:48:00.000Z"}]]},"git":{},"readingTime":{"minutes":2.94,"words":882},"filePathRelative":"PhD/course/2024-2025_Spring_Term/74100162-An_Introduction_to_Modern_Database_System/2025-03-07-02-week03问题.md","excerpt":"<h2>(B) CHORUS: Foundation Models for Unified Data Discovery and Exploration</h2>\\n<blockquote>\\n<p>[!QUESTION]</p>\\n<ol>\\n<li>传统数据发现 (Data Discovery) 和探索 (Data Exploration) 存在哪些主要挑战?</li>\\n</ol>\\n</blockquote>\\n<ul>\\n<li>分析师需花费大量时间 (约 40%) 在数据加载和清洗上.</li>\\n<li>企业内 60-70% 的数据未被利用, 成为 “暗数据”.</li>\\n<li>现有工具依赖任务专用模型, 需大量标注数据 (如 10 万至百万级样本).</li>\\n<li>异构数据集成困难, 自动化程度不足, 导致数据发现效率低下.</li>\\n</ul>","autoDesc":true}');export{p as comp,u as data};
