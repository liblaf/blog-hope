import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o as e}from"./app-BMihMyie.js";const l={};function t(p,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="assembly" tabindex="-1"><a class="header-anchor" href="#assembly"><span>Assembly</span></a></h2><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-assembly"><span class="line"><span>0000000000401876 &lt;string_length&gt;:</span></span>
<span class="line"><span>b0:</span></span>
<span class="line"><span>  401876:	80 3f 00             	cmpb   $0x0,(%rdi)</span></span>
<span class="line"><span>  401879:	74 12                	je     40188d &lt;string_length+0x17&gt;</span></span>
<span class="line"><span>  40187b:	48 89 fa             	mov    %rdi,%rdx</span></span>
<span class="line"><span>b1:</span></span>
<span class="line"><span>  40187e:	48 83 c2 01          	add    $0x1,%rdx</span></span>
<span class="line"><span>  401882:	89 d0                	mov    %edx,%eax</span></span>
<span class="line"><span>  401884:	29 f8                	sub    %edi,%eax</span></span>
<span class="line"><span>  401886:	80 3a 00             	cmpb   $0x0,(%rdx)</span></span>
<span class="line"><span>  401889:	75 f3                	jne    40187e &lt;string_length+0x8&gt;</span></span>
<span class="line"><span>  40188b:	f3 c3                	repz retq</span></span>
<span class="line"><span>b2:</span></span>
<span class="line"><span>  40188d:	b8 00 00 00 00       	mov    $0x0,%eax</span></span>
<span class="line"><span>  401892:	c3                   	retq</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="翻译为-c" tabindex="-1"><a class="header-anchor" href="#翻译为-c"><span>翻译为 C</span></a></h2><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> string_length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> string_length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b0:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rdi </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b2;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rdx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rdi;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b1:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  ++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rdx;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rdx;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rdi;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rdx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b1;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b2:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="optimize" tabindex="-1"><a class="header-anchor" href="#optimize"><span>Optimize</span></a></h2><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> string_length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> rdi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  char*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rdx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rdi;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rdx) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rdi;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rdx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rdi;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // rax</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)])])}const d=i(l,[["render",t]]),k=JSON.parse('{"path":"/2022/course-work/csapp/bomb-lab/2022-04-04-string_length.html","title":"Bomb Lab: string length","lang":"en-US","frontmatter":{"category":["Course Work"],"date":"2022-04-04T00:00:00.000Z","modified":"2025-09-20T15:07:39.000Z","tags":["Bomb_Lab","Computer_Organization_and_Architecture"],"title":"Bomb Lab: string length","description":"Assembly 翻译为 C Optimize","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Bomb Lab: string length\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liblaf\\",\\"url\\":\\"https://github.com/liblaf\\"}]}"],["meta",{"property":"og:url","content":"https://hope.liblaf.me/2022/course-work/csapp/bomb-lab/2022-04-04-string_length.html"}],["meta",{"property":"og:site_name","content":"liblaf"}],["meta",{"property":"og:title","content":"Bomb Lab: string length"}],["meta",{"property":"og:description","content":"Assembly 翻译为 C Optimize"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"Computer_Organization_and_Architecture"}],["meta",{"property":"article:tag","content":"Bomb_Lab"}],["meta",{"property":"article:published_time","content":"2022-04-04T00:00:00.000Z"}]]},"git":{},"readingTime":{"minutes":0.55,"words":165},"filePathRelative":"2022/course-work/csapp/bomb-lab/2022-04-04-string_length.md","excerpt":"<h2>Assembly</h2>\\n<div class=\\"language-assembly line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"assembly\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-assembly\\"><span class=\\"line\\"><span>0000000000401876 &lt;string_length&gt;:</span></span>\\n<span class=\\"line\\"><span>b0:</span></span>\\n<span class=\\"line\\"><span>  401876:\\t80 3f 00             \\tcmpb   $0x0,(%rdi)</span></span>\\n<span class=\\"line\\"><span>  401879:\\t74 12                \\tje     40188d &lt;string_length+0x17&gt;</span></span>\\n<span class=\\"line\\"><span>  40187b:\\t48 89 fa             \\tmov    %rdi,%rdx</span></span>\\n<span class=\\"line\\"><span>b1:</span></span>\\n<span class=\\"line\\"><span>  40187e:\\t48 83 c2 01          \\tadd    $0x1,%rdx</span></span>\\n<span class=\\"line\\"><span>  401882:\\t89 d0                \\tmov    %edx,%eax</span></span>\\n<span class=\\"line\\"><span>  401884:\\t29 f8                \\tsub    %edi,%eax</span></span>\\n<span class=\\"line\\"><span>  401886:\\t80 3a 00             \\tcmpb   $0x0,(%rdx)</span></span>\\n<span class=\\"line\\"><span>  401889:\\t75 f3                \\tjne    40187e &lt;string_length+0x8&gt;</span></span>\\n<span class=\\"line\\"><span>  40188b:\\tf3 c3                \\trepz retq</span></span>\\n<span class=\\"line\\"><span>b2:</span></span>\\n<span class=\\"line\\"><span>  40188d:\\tb8 00 00 00 00       \\tmov    $0x0,%eax</span></span>\\n<span class=\\"line\\"><span>  401892:\\tc3                   \\tretq</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,k as data};
