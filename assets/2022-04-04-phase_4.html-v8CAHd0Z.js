import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o as l}from"./app-BMihMyie.js";const e={};function p(t,s){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="assembly" tabindex="-1"><a class="header-anchor" href="#assembly"><span>Assembly</span></a></h2><div class="language-assembly line-numbers-mode" data-highlighter="shiki" data-ext="assembly" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-assembly"><span class="line"><span>00000000004015a9 &lt;phase_4&gt;:</span></span>
<span class="line"><span>b0:</span></span>
<span class="line"><span>  4015a9:	48 83 ec 18          	sub    $0x18,%rsp</span></span>
<span class="line"><span>  4015ad:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx</span></span>
<span class="line"><span>  4015b2:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx</span></span>
<span class="line"><span>  4015b7:	48 8d 35 77 1e 00 00 	lea    0x1e77(%rip),%rsi        # 403435 &lt;array.3354+0x255&gt;</span></span>
<span class="line"><span>  4015be:	b8 00 00 00 00       	mov    $0x0,%eax</span></span>
<span class="line"><span>  4015c3:	e8 68 fb ff ff       	callq  401130 &lt;__isoc99_sscanf@plt&gt;</span></span>
<span class="line"><span>  4015c8:	83 f8 02             	cmp    $0x2,%eax</span></span>
<span class="line"><span>  4015cb:	75 0c                	jne    4015d9 &lt;phase_4+0x30&gt;</span></span>
<span class="line"><span>  4015cd:	8b 44 24 08          	mov    0x8(%rsp),%eax</span></span>
<span class="line"><span>  4015d1:	83 e8 02             	sub    $0x2,%eax</span></span>
<span class="line"><span>  4015d4:	83 f8 02             	cmp    $0x2,%eax</span></span>
<span class="line"><span>  4015d7:	76 05                	jbe    4015de &lt;phase_4+0x35&gt;</span></span>
<span class="line"><span>b1:</span></span>
<span class="line"><span>  4015d9:	e8 7e 05 00 00       	callq  401b5c &lt;explode_bomb&gt;</span></span>
<span class="line"><span>b2:</span></span>
<span class="line"><span>  4015de:	8b 74 24 08          	mov    0x8(%rsp),%esi</span></span>
<span class="line"><span>  4015e2:	bf 09 00 00 00       	mov    $0x9,%edi</span></span>
<span class="line"><span>  4015e7:	e8 85 ff ff ff       	callq  401571 &lt;func4&gt;</span></span>
<span class="line"><span>  4015ec:	3b 44 24 0c          	cmp    0xc(%rsp),%eax</span></span>
<span class="line"><span>  4015f0:	74 05                	je     4015f7 &lt;phase_4+0x4e&gt;</span></span>
<span class="line"><span>  4015f2:	e8 65 05 00 00       	callq  401b5c &lt;explode_bomb&gt;</span></span>
<span class="line"><span>b3:</span></span>
<span class="line"><span>  4015f7:	48 83 c4 18          	add    $0x18,%rsp</span></span>
<span class="line"><span>  4015fb:	c3                   	retq</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hack" tabindex="-1"><a class="header-anchor" href="#hack"><span>Hack</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>(gdb) x/s 0x403435</span></span>
<span class="line"><span>0x403435:       &quot;%d %d&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="翻译为-c" tabindex="-1"><a class="header-anchor" href="#翻译为-c"><span>翻译为 C</span></a></h2><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> phase_4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> rdi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b0:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rcx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rsp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rdx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rsp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rsi </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> %d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> __isoc99_sscanf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(rdi, rsi, rdx, rcx);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b1;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b2;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b1:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  explode_bomb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b2:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rsi </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rdi </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fun4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 32-bit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b3;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  explode_bomb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b3:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="optimize" tabindex="-1"><a class="header-anchor" href="#optimize"><span>Optimize</span></a></h2><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> phase_4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> rdi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b0:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> __isoc99_sscanf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(rdi, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> %d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, rsp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, rsp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b1;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // unsigned</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b2;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b1:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  explode_bomb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b2:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> func4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (rax </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rsp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b3;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  explode_bomb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b3:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hack-1" tabindex="-1"><a class="header-anchor" href="#hack-1"><span>Hack</span></a></h2><p>输入 <code>x</code>, <code>y</code>, 只需满足 <code>func4(9, y) == x</code> 即可. 注意到运行过程中存在无符号比较, 稳妥的做法是令 <code>0 &lt;= y - 2 &lt;= 2</code>, 不妨取 <code>y = 2</code>.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>(gdb) disassemble</span></span>
<span class="line"><span>Dump of assembler code for function phase_4:</span></span>
<span class="line"><span>   0x00000000004015a9 &lt;+0&gt;:     sub    $0x18,%rsp</span></span>
<span class="line"><span>   0x00000000004015ad &lt;+4&gt;:     lea    0x8(%rsp),%rcx</span></span>
<span class="line"><span>   0x00000000004015b2 &lt;+9&gt;:     lea    0xc(%rsp),%rdx</span></span>
<span class="line"><span>   0x00000000004015b7 &lt;+14&gt;:    lea    0x1e77(%rip),%rsi        # 0x403435</span></span>
<span class="line"><span>   0x00000000004015be &lt;+21&gt;:    mov    $0x0,%eax</span></span>
<span class="line"><span>   0x00000000004015c3 &lt;+26&gt;:    callq  0x401130 &lt;__isoc99_sscanf@plt&gt;</span></span>
<span class="line"><span>   0x00000000004015c8 &lt;+31&gt;:    cmp    $0x2,%eax</span></span>
<span class="line"><span>   0x00000000004015cb &lt;+34&gt;:    jne    0x4015d9 &lt;phase_4+48&gt;</span></span>
<span class="line"><span>   0x00000000004015cd &lt;+36&gt;:    mov    0x8(%rsp),%eax</span></span>
<span class="line"><span>   0x00000000004015d1 &lt;+40&gt;:    sub    $0x2,%eax</span></span>
<span class="line"><span>   0x00000000004015d4 &lt;+43&gt;:    cmp    $0x2,%eax</span></span>
<span class="line"><span>   0x00000000004015d7 &lt;+46&gt;:    jbe    0x4015de &lt;phase_4+53&gt;</span></span>
<span class="line"><span>   0x00000000004015d9 &lt;+48&gt;:    callq  0x401b5c &lt;explode_bomb&gt;</span></span>
<span class="line"><span>   0x00000000004015de &lt;+53&gt;:    mov    0x8(%rsp),%esi</span></span>
<span class="line"><span>   0x00000000004015e2 &lt;+57&gt;:    mov    $0x9,%edi</span></span>
<span class="line"><span>   0x00000000004015e7 &lt;+62&gt;:    callq  0x401571 &lt;func4&gt;</span></span>
<span class="line"><span>=&gt; 0x00000000004015ec &lt;+67&gt;:    cmp    0xc(%rsp),%eax</span></span>
<span class="line"><span>   0x00000000004015f0 &lt;+71&gt;:    je     0x4015f7 &lt;phase_4+78&gt;</span></span>
<span class="line"><span>   0x00000000004015f2 &lt;+73&gt;:    callq  0x401b5c &lt;explode_bomb&gt;</span></span>
<span class="line"><span>   0x00000000004015f7 &lt;+78&gt;:    add    $0x18,%rsp</span></span>
<span class="line"><span>   0x00000000004015fb &lt;+82&gt;:    retq</span></span>
<span class="line"><span>End of assembler dump.</span></span>
<span class="line"><span>(gdb) info registers eax</span></span>
<span class="line"><span>eax            0xb0     176</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="solution" tabindex="-1"><a class="header-anchor" href="#solution"><span>Solution</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>176 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,13)])])}const k=i(e,[["render",p]]),r=JSON.parse('{"path":"/2022/course-work/csapp/bomb-lab/2022-04-04-phase_4.html","title":"Bomb Lab: Phase 4","lang":"en-US","frontmatter":{"category":["Course Work"],"date":"2022-04-04T00:00:00.000Z","modified":"2025-09-20T15:07:39.000Z","tags":["Bomb_Lab","Computer_Organization_and_Architecture"],"title":"Bomb Lab: Phase 4","description":"Assembly Hack 翻译为 C Optimize Hack 输入 x, y, 只需满足 func4(9, y) == x 即可. 注意到运行过程中存在无符号比较, 稳妥的做法是令 0 <= y - 2 <= 2, 不妨取 y = 2. Solution","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Bomb Lab: Phase 4\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"liblaf\\",\\"url\\":\\"https://github.com/liblaf\\"}]}"],["meta",{"property":"og:url","content":"https://hope.liblaf.me/2022/course-work/csapp/bomb-lab/2022-04-04-phase_4.html"}],["meta",{"property":"og:site_name","content":"liblaf"}],["meta",{"property":"og:title","content":"Bomb Lab: Phase 4"}],["meta",{"property":"og:description","content":"Assembly Hack 翻译为 C Optimize Hack 输入 x, y, 只需满足 func4(9, y) == x 即可. 注意到运行过程中存在无符号比较, 稳妥的做法是令 0 <= y - 2 <= 2, 不妨取 y = 2. Solution"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"Computer_Organization_and_Architecture"}],["meta",{"property":"article:tag","content":"Bomb_Lab"}],["meta",{"property":"article:published_time","content":"2022-04-04T00:00:00.000Z"}]]},"git":{},"readingTime":{"minutes":1.8,"words":541},"filePathRelative":"2022/course-work/csapp/bomb-lab/2022-04-04-phase_4.md","excerpt":"<h2>Assembly</h2>\\n<div class=\\"language-assembly line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"assembly\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-assembly\\"><span class=\\"line\\"><span>00000000004015a9 &lt;phase_4&gt;:</span></span>\\n<span class=\\"line\\"><span>b0:</span></span>\\n<span class=\\"line\\"><span>  4015a9:\\t48 83 ec 18          \\tsub    $0x18,%rsp</span></span>\\n<span class=\\"line\\"><span>  4015ad:\\t48 8d 4c 24 08       \\tlea    0x8(%rsp),%rcx</span></span>\\n<span class=\\"line\\"><span>  4015b2:\\t48 8d 54 24 0c       \\tlea    0xc(%rsp),%rdx</span></span>\\n<span class=\\"line\\"><span>  4015b7:\\t48 8d 35 77 1e 00 00 \\tlea    0x1e77(%rip),%rsi        # 403435 &lt;array.3354+0x255&gt;</span></span>\\n<span class=\\"line\\"><span>  4015be:\\tb8 00 00 00 00       \\tmov    $0x0,%eax</span></span>\\n<span class=\\"line\\"><span>  4015c3:\\te8 68 fb ff ff       \\tcallq  401130 &lt;__isoc99_sscanf@plt&gt;</span></span>\\n<span class=\\"line\\"><span>  4015c8:\\t83 f8 02             \\tcmp    $0x2,%eax</span></span>\\n<span class=\\"line\\"><span>  4015cb:\\t75 0c                \\tjne    4015d9 &lt;phase_4+0x30&gt;</span></span>\\n<span class=\\"line\\"><span>  4015cd:\\t8b 44 24 08          \\tmov    0x8(%rsp),%eax</span></span>\\n<span class=\\"line\\"><span>  4015d1:\\t83 e8 02             \\tsub    $0x2,%eax</span></span>\\n<span class=\\"line\\"><span>  4015d4:\\t83 f8 02             \\tcmp    $0x2,%eax</span></span>\\n<span class=\\"line\\"><span>  4015d7:\\t76 05                \\tjbe    4015de &lt;phase_4+0x35&gt;</span></span>\\n<span class=\\"line\\"><span>b1:</span></span>\\n<span class=\\"line\\"><span>  4015d9:\\te8 7e 05 00 00       \\tcallq  401b5c &lt;explode_bomb&gt;</span></span>\\n<span class=\\"line\\"><span>b2:</span></span>\\n<span class=\\"line\\"><span>  4015de:\\t8b 74 24 08          \\tmov    0x8(%rsp),%esi</span></span>\\n<span class=\\"line\\"><span>  4015e2:\\tbf 09 00 00 00       \\tmov    $0x9,%edi</span></span>\\n<span class=\\"line\\"><span>  4015e7:\\te8 85 ff ff ff       \\tcallq  401571 &lt;func4&gt;</span></span>\\n<span class=\\"line\\"><span>  4015ec:\\t3b 44 24 0c          \\tcmp    0xc(%rsp),%eax</span></span>\\n<span class=\\"line\\"><span>  4015f0:\\t74 05                \\tje     4015f7 &lt;phase_4+0x4e&gt;</span></span>\\n<span class=\\"line\\"><span>  4015f2:\\te8 65 05 00 00       \\tcallq  401b5c &lt;explode_bomb&gt;</span></span>\\n<span class=\\"line\\"><span>b3:</span></span>\\n<span class=\\"line\\"><span>  4015f7:\\t48 83 c4 18          \\tadd    $0x18,%rsp</span></span>\\n<span class=\\"line\\"><span>  4015fb:\\tc3                   \\tretq</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{k as comp,r as data};
